Directed Graph Cycle (gfg)

bool cyclicDFS(int node, vector<int> adj[], int visited[], int neighbours[])
{
 visited[node] = 1;
 neighbours[node] = 1;

 for(int i: adj[node])
 {
  if(!visited[i])
   {
    if(cyclicDFS(i,adj,visited,neighbours)){return true;}
    }
   else if(neighbours[i]) {return true;}
 } 
 
 neighbours[node] = 0;
 return false;
}
 
 

bool isCyclic(int V, vector<int> adj[])
{
 int visited[V] = {0};
 int neighbours[V] = {0};

 for(int i = 0; i < V; ++i)
 {
  if(!visited[i]) 
  {
   if(cyclicDFS(i,adj,visited,neighbours)) 
    {return true;}
  }
 } 
 return false;
}