Undirected Graph Cycle

bool checkCycle(int node, int parent, vector<int>& visited, vector<int> adj[])
{
 visited[node] = 1;
 
 for(int i: adj[node])
 {
  if(!visited[i]) 
  {
   if(checkCycle(i,node,viisted,adj)) {return true;}
  }
  else if(i != parent)
  {
   return true;
  }
 }
 return false;
}

bool isCycle(int V, vector<int> adj[])
{ 
 vector<int> visited(V+1, 0);
 
 for(int i=0 ; i < V; ++i)
 {
  if(!visited[i])
   {
     if(checkCycle(i,-1,visited,adj)) {return true;}
   }
 }
 return false;
}














bool checkCycle(int node, int parent, vector<int>& visited, vector<int> adj[])
{
 visited[node] = 1;
 
 for(int i: adj[node])
 { 
  if(!visited[i]) 
  {
   if(checkCycle(i,node,visited,adj)) {return true;}
  }
  else if(i != parent) {return true;}
 }
 return false;
}


bool isCycle(int V, vector<int> adj[])
{
 vector<int>visited(V+1, 0);
 
 for(int i=0; i < V; ++i)
 {
  if(!visited[i])
  {
   if(checkCycle(i,-1,visited,adj)) {return true;}
  }
 }
 return false;
}

























