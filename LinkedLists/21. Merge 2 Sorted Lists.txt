21. Merge 2 Sorted Lists

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

ListNode* mergeTwoLists(ListNode* list1, ListNode* list2)
{
 ListNode* newHead = new ListNode(0);
 ListNode* p = newHead;
 
 while(list1 != NULL && list2 != NULL) 
 {
  if(list1 -> val <= list2 -> val) 
  {
   p -> next = new ListNode(list1 -> val);
   p = p -> next;
   list1 = list1 -> next;
  }

 else
 {
   p -> next = new ListNode(list2 -> val);
   p = p -> next;
   list2 = list2 -> next;
 }
 }

 while(l1 != NULL)
 { 
  p -> next = new ListNode(l1 -> val);
  p = p -> next;
  l1 = l1 -> next;
 }

 while(l2 != NULL)
 {
  p -> next = new ListNode(l2 -> val);
  p = p -> next;
  l2 = l2 -> next;
 }

 return newHead -> next;
}