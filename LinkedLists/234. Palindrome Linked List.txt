234. Palindrome Linked List

    ListNode* reverseList(ListNode*& head){
        ListNode* prev = NULL;
        ListNode* curr = head;
        ListNode* next;

        while(curr != NULL){
            next = curr -> next;
            curr -> next = prev;
            prev = curr;
            curr = next;
        } 
     return prev;
    }
    
    bool isPalindrome(ListNode* head) {
        ListNode* slow = head;
        ListNode* fast = head;

        while(fast != NULL && fast-> next != NULL){
            slow = slow -> next;
            fast = fast -> next -> next;}

         ListNode* rev = reverseList(slow);
         while(rev != NULL)
         {
            if(head -> val != rev -> val){
                return false;
            }
            head = head -> next;
            rev = rev -> next;
         }   
         return true;
    }