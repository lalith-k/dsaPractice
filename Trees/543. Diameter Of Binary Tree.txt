543. Diameter Of Binary Tree


int height(TreeNode* root, int& maxi)
{
 if(root == NULL) {return 0;}
 int left = height(root -> left, maxi); 
 int right = height(root -> right, maxi);
 maxi = max(left+right, maxi);
 return (1 + maxi); 
}

int diameterOfBinaryTree(TreeNode* root)
{
 int maxi = 0;
 int ans = height(root, maxi);
 return ans;
}


/////////////////////////////////////////////////////
    int height(TreeNode* root)
    {

        if(root == NULL)
        {return 0;}

        int left = height(root -> left);
        int right = height(root -> right);
        
        int ans = (max(left,right) + 1);
        return ans;
    }
    
    int diameterOfBinaryTree(TreeNode* root) {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
     if(root == NULL){
        return 0;
     }
     int op1 = diameterOfBinaryTree(root -> left);
     int op2 = diameterOfBinaryTree(root -> right);
     int op3 = height(root -> left) + height(root -> right) ;

     return max(op3, max(op2, op1));   
    }
//////////////////////////////////////////////////////