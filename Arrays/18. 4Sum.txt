18. 4Sum

vector<vector<int>> fourSum(vector<int>& nums, int target)
{
 vector<vector<int>> result;
 sort(nums.begin(), nums.end());
 
 if(nums.size() < 4)
 {return result;}

 for(int i=0; i < nums.size(); ++i)
 { 
  if(i > 0 && nums[i] == nums[i-1]){continue;}
 
  for(int j = i + 1; j < nums.size(); ++j)
   {
    if(j > i + 1 && nums[j] == nums[j-1]) {continue;}

    int k = j + 1;
    int l = nums.size() - 1;
    while(k < l)
    {
     long long t = (long long)nums[i] + nums[j] + nums[k] + nums[l];
     
     if(t > 0) {l--;}
     
    else if(t < 0) {k++;}

     else 
     {
      result.push_back({nums[i], nums[j], nums[k], nums[l]});
      k++;
    
      while(k < l && nums[k] == nums[k-1]) {k++;}    
     }
    }
   }
 }
 return result;
}